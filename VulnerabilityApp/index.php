<?php
// Database connection (simulate an in-memory SQLite database)
$db = new PDO('sqlite::memory:');
$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);


$db->exec("CREATE TABLE users (id INTEGER PRIMARY KEY, username TEXT, password TEXT)");
$db->exec("CREATE TABLE messages (id INTEGER PRIMARY KEY, content TEXT)");
$db->exec("INSERT INTO users (username, password) VALUES ('admin', 'password')");

?>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Vulnerable Web Application</title>
</head>

<body>
    <h1>Vulnerable Web Application</h1>

    <h2>Message Submission (XSS Vulnerable)</h2>
    <form method="POST" action="">
        <input type="text" name="message" placeholder="Enter your message">
        <button type="submit" name="submit_message">Submit Message</button>
    </form>
    <?php
    if (isset($_POST['submit_message'])) {
        // Vulnerable to XSS: Directly rendering user input without sanitization
        $message = $_POST['message'];

        // Use prepared statements to safely insert the data into the database
        $stmt = $db->prepare("INSERT INTO messages (content) VALUES (:message)");
        $stmt->bindParam(':message', $message, PDO::PARAM_STR);
        $stmt->execute();
    }

    $messages = $db->query("SELECT content FROM messages")->fetchAll();
    foreach ($messages as $msg) {
        echo "<p>" . $msg['content'] . "</p>"; // Vulnerable to XSS
    }
    ?>

    <h2>Login (SQL Injection Vulnerable)</h2>
    <form method="POST" action="">
        <input type="text" name="username" placeholder="Username">
        <input type="password" name="password" placeholder="Password">
        <button type="submit" name="login">Login</button>
    </form>
    <?php
    if (isset($_POST['login'])) {
        // Vulnerable to SQL Injection: Directly embedding user input in SQL query
        $username = $_POST['username'];
        $password = $_POST['password'];
        $query = "SELECT * FROM users WHERE username = '$username' AND password = '$password'";
        $result = $db->query($query);

        if ($result && $result->fetch()) {
            echo "<p>Login successful! Welcome, $username.</p>";
        } else {
            echo "<p>Invalid credentials.</p>";
        }
    }
    ?>

    <h2>Submit a Message (CSRF Vulnerable)</h2>
    <form method="POST" action="">
        <input type="text" name="csrf_message" placeholder="Enter your message">
        <button type="submit" name="submit_csrf_message">Submit Message</button>
    </form>
    <?php
    if (isset($_POST['submit_csrf_message'])) {
        // Vulnerable to CSRF: No CSRF token validation
        $csrf_message = $_POST['csrf_message'];
        $db->exec("INSERT INTO messages (content) VALUES ('$csrf_message')");
        echo "<p>Message submitted via CSRF form.</p>";
    }
    ?>
</body>

</html>